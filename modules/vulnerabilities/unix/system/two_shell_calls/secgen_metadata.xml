<?xml version="1.0"?>

<vulnerability xmlns="http://www.github/gregtampa/HBCTF-Battlegrounds/vulnerability"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://www.github/gregtampa/HBCTF-Battlegrounds/vulnerability">
  <name>2x Shell Module</name>
  <author>Mihai Ordean</author>
  <author>Puppet Labs</author>
  <module_license>Apache v2</module_license>
  <description>Creates a C file and a shell executable with permissions within two user directories. Drops a flag in a
    user's home directory.
  </description>

  <type>system</type>
  <privilege>none</privilege>
  <access>local</access>
  <platform>linux</platform>

  <read_fact>accounts</read_fact>

  <default_input into="accounts">

    <generator type="account">
      <input into="password">
        <generator type="strong_password_generator"/>
      </input>
      <input into="leaked_filenames">
        <value>flag.txt</value>
      </input>
      <input into="strings_to_leak">
        <generator type="flag_generator"/>
      </input>
    </generator>

    <generator type="account">
      <input into="password">
        <generator type="strong_password_generator"/>
      </input>
      <input into="leaked_filenames">
        <value/>
      </input>
      <input into="strings_to_leak">
        <!-- String 'none' used for setting permissions on 'shell' binary in puppet. -->
        <value>none</value>
      </input>
    </generator>
  </default_input>

  <!--optional details-->
  <hint>Find the 2 user accounts with '~/shell' binaries, investigate the shell.c code and their permissions. </hint>
  <solution>Try to combine the two binaries to make something interesting happen.</solution>

  <requires>
    <module_path>utilities/unix/system/accounts</module_path>
  </requires>

  <!-- Need a way on to the box. -->
  <requires>
    <privilege>user_rwx</privilege>
  </requires>

</vulnerability>